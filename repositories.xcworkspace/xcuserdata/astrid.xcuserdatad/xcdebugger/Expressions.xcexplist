<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "SQLiteDataSource.cachedItemFromDBResult(result:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in SQLiteDataSource.itemIsValid(item:forCachePolicies:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in SQLiteDataSource.append(items:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "SQLiteDataSource.itemIsValid(item:forCachePolicies:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in SQLiteDataSource.getAll():SQLiteDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "result.next">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in closure #1 in SQLiteDataSource.append(items:):SQLiteDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "item.getKey()">
            </PersistentString>
            <PersistentString
               value = "item.getKey().hashValue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SQLiteDataSource.convertToDictionary(text:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "SQLiteDataSource.init(version:dbName:policies:isCache:sqliteRuntimeConfiguration:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "SQLiteDataSource.addOrUpdate(value:):SQLiteDataSource.swift">
      </ContextState>
      <ContextState
         contextName = "repositoriesTests.testExample():repositoriesTests.swift">
      </ContextState>
      <ContextState
         contextName = "CachePolicyTtl.isValid(cacheItem:):CachePolicies.swift">
         <PersistentStrings>
            <PersistentString
               value = "lifeTime &gt; timeProvider.currentTimeMillis()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
